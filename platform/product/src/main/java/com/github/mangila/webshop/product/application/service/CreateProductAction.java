package com.github.mangila.webshop.product.application.service;

import com.github.mangila.webshop.identity.application.IdentityService;
import com.github.mangila.webshop.product.application.ProductOutboxMapper;
import com.github.mangila.webshop.product.domain.Product;
import com.github.mangila.webshop.product.domain.ProductCommandRepository;
import com.github.mangila.webshop.product.domain.cqrs.CreateProductCommand;
import com.github.mangila.webshop.product.domain.event.ProductEvent;
import com.github.mangila.webshop.shared.Ensure;
import com.github.mangila.webshop.shared.SpringEventPublisher;
import com.github.mangila.webshop.shared.model.OutboxEvent;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
public class CreateProductAction {

    private final ProductOutboxMapper outboxMapper;
    private final ProductCommandRepository repository;
    private final SpringEventPublisher publisher;
    private final IdentityService identityService;

    public CreateProductAction(ProductOutboxMapper outboxMapper,
                               ProductCommandRepository repository,
                               SpringEventPublisher publisher,
                               IdentityService identityService) {
        this.outboxMapper = outboxMapper;
        this.repository = repository;
        this.publisher = publisher;
        this.identityService = identityService;
    }

    @Transactional
    public OutboxEvent execute(CreateProductCommand command) {
        Ensure.notNull(command, CreateProductCommand.class);
        Ensure.isTrue(identityService.hasGenerated(command.id().value()), "Id must be generated by identity service before calling insert command: %s".formatted(command.id().value()));
        Product product = repository.create(command);
        OutboxEvent outboxEvent = outboxMapper.toOutboxEvent(
                ProductEvent.PRODUCT_CREATED,
                product);
        publisher.publishOutboxEvent(outboxEvent);
        return outboxEvent;
    }

}
